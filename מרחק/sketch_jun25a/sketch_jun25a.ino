// הגדרת הפין שאליו מחובר ה-OUT של חיישן ה-PIR.
// ברוב לוחות ESP32, פין 32 הוא פין GPIO תקין.
// אם את משתמשת בארדואינו (Uno, Nano וכו'), ייתכן שתצטרכי לשנות לפין דיגיטלי אחר, כמו 2, 3, 4, 7, 8 וכו'.
#define PIR_PIN 32 

// הגדרת זמן השהייה מינימלי בין זיהויי תנועה (במילישניות).
// זה מונע הצפה של הודעות "תנועה זוהתה!" כאשר התנועה נמשכת.
// ערך של 3 שניות (3000 מילישניות) הוא סביר לרוב השימושים.
const unsigned long DETECTION_COOLDOWN_MS = 3000; 

// משתנה שישמור את הזמן במילישניות של הזיהוי האחרון.
// נשתמש בו כדי לאכוף את ה-cooldown.
unsigned long lastDetectionTime = 0; 

void setup() {
  // הגדרת הפין של החיישן כקלט.
  // זה אומר שהלוח יצפה לקבל מידע מהפין הזה (ולא לשלוח מידע אליו).
  pinMode(PIR_PIN, INPUT); 

  // אתחול התקשורת הטורית (Serial Monitor) בקצב של 9600 באוד.
  // זה מאפשר לראות הודעות דיבוג וסטטוס על המחשב.
  Serial.begin(115200); 
  Serial.println("ממתין לאתחול החיישן PIR...");

  // !!! שלב קריטי לפתרון בעיית זיהוי תנועה קבוע !!!
  // חיישני PIR דורשים זמן "חימום" והתייצבות לאחר קבלת מתח.
  // בזמן זה (שנע בין 10 ל-60 שניות), החיישן עלול לדווח על זיהויי שווא.
  // חשוב מאוד לוודא שאין שום תנועה ליד החיישן במהלך תקופה זו.
  // 20 שניות זה זמן התחלתי סביר. אם הבעיה ממשיכה, נסה/י 30 או 60 שניות.
  delay(20000); 
  
  Serial.println("מוכן לזיהוי תנועה.");
}

void loop() {
  // קריאת המצב הדיגיטלי של פין החיישן.
  // digitalRead() מחזיר HIGH (1) אם יש מתח על הפין, ו-LOW (0) אם אין.
  int pirState = digitalRead(PIR_PIN); 

  // הדפסת המצב הנוכחי של החיישן ל-Serial Monitor.
  // זה עוזר מאוד לדיבוג ולראות מה החיישן קורא.
  Serial.println(pirState);

  // בדיקה אם החיישן מזהה תנועה (כלומר, הפין במצב HIGH).
  if (pirState == HIGH) {
    // אם זוהתה תנועה, בודקים אם עבר מספיק זמן מאז הזיהוי הקודם (Cooldwon).
    // millis() מחזירה את מספר המילישניות שחלפו מאז שהלוח התחיל לפעול.
    if (millis() - lastDetectionTime > DETECTION_COOLDOWN_MS) {
      Serial.println("תנועה זוהתה!");
      // עדכון זמן הזיהוי האחרון.
      lastDetectionTime = millis(); 
    }
  } else {
    // אם הפין במצב LOW, אין תנועה.
    Serial.println("אין תנועה.");
  }

  // השהייה קצרה לפני הקריאה הבאה.
  // השהייה של 100 מילישניות מספיקה בדרך כלל כדי לא להעמיס על ה-Serial Monitor
  // ועדיין לדגום את החיישן מספיק מהר.
  // השהייה ארוכה מדי (כמו 2000 מילישניות שהייתה לך) עלולה לגרום לך לפספס תנועות קצרות.
  delay(100); 
}